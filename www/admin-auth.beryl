require-version 0

(struct
	:argon2 (require "~/argon2")
	
	:login-admin function db name pass do
		let admin-info = (db "SELECT encoded_password, encoded_auth_token FROM admins WHERE name = ?1" name) 0
		if admin-info =/= null do
		
			let correct = (self :argon2) :verify (admin-info :encoded_password) pass
			if correct do
				let new-token = rand-hexs 32
				let salt = rands 32
				let encoded-token = (self :argon2) :encode new-token salt
				# Overwrites the existing token. A single admin account can only be logged in via a single token at a time.
				# This would mainly cause an issue if someone tried to log in to the same account using different browsers/machines
				# since the token cookie would only exist in one browser at a time
				db "UPDATE admins SET encoded_auth_token = ?1 WHERE name = ?2" encoded-token name
				cat name ":" new-token # Return the new token
			end
		end # else just null
	end
	
	:logout-admin function db token-cookie do
		let passed = self :auth-admin db token-cookie
		if passed do
			let name = assert ((split token-cookie ":") 0)
			db "UPDATE admins SET encoded_auth_token = NULL WHERE name = ?1" name
		end
	end
	
	:auth-admin function db token-cookie do
		let passed = false
		if (token-cookie =/= "") and? (token-cookie =/= null) do
			let entries = split token-cookie ":"
			let name = assert (entries 0)
			let token = assert (entries 1)
		
			let encoded-token = ((db "SELECT encoded_auth_token FROM admins WHERE name = ?1" name) 0) :encoded_auth_token
			if encoded-token =/= null do
				passed = (self :argon2) :verify encoded-token token
			end
		end

		passed
	end
)
