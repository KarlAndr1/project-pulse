let cgi = require "~/cgi"
let sql = require "~/sql"

let req-type = assert (getenv "REQUEST_METHOD")
let http-header-lbrk = cat carriage-return newline

let redirect-to = "/add-users.html"

let db-interface = require "db-interface"

let parse-csv = function csv do
	let lines = split (strip csv) newline
	
	lines map= with x do
		map (split x ",") strip
	end

	lines
end


let handle-post = function db admin-login do
	let post-data = input read-all # Read everything from stdin
	let lines = split post-data http-header-lbrk
	
	let delimiter = (assert (lines 0)) cat: "--" # This ends the POST body
	
	let headers-end = assert (find-in lines "") # Find the end of the headers (an empty line, just a line break)
	let body-end = assert (find-in lines delimiter)
	
	let content = slice lines headers-end + 1 body-end
	content = content join-with: newline
	
	let data = parse-csv content
	
	let ok = db-interface :add-users db admin-login data
	if ok do
		redirect-to = "/view-users.beryl"
	end else do
		redirect-to = "/auth-error.html"
	end
end

if req-type == "POST" do
	let cookies = cgi :parse-cookies (getenv "HTTP_COOKIE")
	let admin-login = cookies :admin-login

	let db = sql :open (db-interface :db-path)
	handle-post db admin-login
	sql :close db
end

cgi :headers do
	redirect redirect-to
end
