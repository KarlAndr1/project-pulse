let cgi = require "~/cgi"
let sql = require "~/sql"

let db-interface = require "db-interface"
let utils = require "utils"

let req-type = assert (getenv "REQUEST_METHOD")
let server-data = assert (getenv "LIGHTTPD_DATA_PATH")

let redirect-to = "/new-project.html"

let freq-to-time = function freq-word do
	(struct
		"every-minute" 60
		"daily" 60 * 60 * 24
		"weekly" 60 * 60 * 24 * 7
		"fortnightly" 60 * 60 * 24 * 14
		"monthly" 60 * 60 * 24 * 30
		"manual" null
	) freq-word
end

let handle-post = function db admin-token do
	let data = cgi :parse-url-parameters (input read-all)
	
	let name = assert (data :project-name)
	
	let freq = assert (data :reporting-frequency)
	
	let freq-time = freq-to-time freq
	let start-date = utils :parse-date (data :start-date)
	let end-date = utils :parse-date (data :end-date)
	
	let res = db-interface :create-new-project db admin-token name freq-time start-date end-date
	let new-project-id = res 0
	let err = res 1
	
	if err == "auth-error" do
		redirect-to = "/auth-error.html"
	end elseif err == null do
		if freq == "manual" do
			redirect-to = cat "/add-project-dates.beryl?id=" new-project-id
		end else do
			redirect-to = cat "/manage-project.beryl?id=" new-project-id
		end
	end elseif err == "invalid-dates" do
		redirect-to = "/new-project.html"
	end
end

if req-type == "POST" do
	let cookies = cgi :parse-cookies (getenv "HTTP_COOKIE")

	let db = sql :open (cat server-data "/database")
	handle-post db (cookies :admin-login)
	sql :close db
end

cgi :headers do
	redirect redirect-to
end
